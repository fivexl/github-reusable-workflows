name: Pre-Commit

on:
  workflow_call:

env:
  TERRAFORM_DOCS_VERSION: v0.16.0
  TFLINT_VERSION: v0.44.1

jobs:
  collectInputs:
    name: Collect workflow inputs
    runs-on: ubuntu-latest
    outputs:
      directories: ${{ steps.filtered_dirs.outputs.directories }} 
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get root directories
        id: dirs
        uses: clowdhaus/terraform-composite-actions/directories@v1.8.3

      - name: Filter directories
        id: filtered_dirs
        run: |
          cat > directories.py <<EOL
          import json

          def filter_directories(dirs: list[str]):
              r = []
              for d in dirs:
                  if 'dumping_area' in d:
                      continue
                  r.append(d)
              return json.dumps(r)

          if __name__ == '__main__':
              dirs_input = '${{ steps.dirs.outputs.directories }}'
              print(filter_directories(dirs=json.loads(dirs_input)))
          EOL

          DIRS=$(python ./directories.py)
          echo $DIRS
          rm directories.py
          echo "directories=$DIRS" >> $GITHUB_OUTPUT
        

  preCommitMinVersions:
    name: Min TF pre-commit
    needs: collectInputs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJson(needs.collectInputs.outputs.directories) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Terraform min/max versions
        id: minMax
        uses: clowdhaus/terraform-min-max@v1.2.7
        with:
          directory: ${{ matrix.directory }}

      - name: Pre-commit Terraform ${{ steps.minMax.outputs.minVersion }}
        # Run only validate pre-commit check on min version supported
        if: ${{ matrix.directory !=  '.'}}
        uses: clowdhaus/terraform-composite-actions/pre-commit@v1.8.3
        with:
          terraform-version: ${{ steps.minMax.outputs.minVersion }}
          tflint-version: ${{ env.TFLINT_VERSION }}
          args: 'terraform_validate --color=always --show-diff-on-failure --files ${{ matrix.directory }}/*'

      - name: Pre-commit Terraform ${{ steps.minMax.outputs.minVersion }}
        # Run only validate pre-commit check on min version supported
        if: ${{ matrix.directory ==  '.'}}
        uses: clowdhaus/terraform-composite-actions/pre-commit@v1.8.3
        with:
          terraform-version: ${{ steps.minMax.outputs.minVersion }}
          tflint-version: ${{ env.TFLINT_VERSION }}
          args: 'terraform_validate --color=always --show-diff-on-failure --files $(ls *.tf)'

  preCommitMaxVersion:
    name: Max TF pre-commit
    runs-on: ubuntu-latest
    needs: collectInputs
    strategy:
      matrix:
        directory: ${{ fromJson(needs.collectInputs.outputs.directories) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Terraform min/max versions
        id: minMax
        uses: clowdhaus/terraform-min-max@v1.2.7
        with:
          directory: ${{ matrix.directory }}

      - name: Pre-commit Terraform ${{ steps.minMax.outputs.maxVersion }}
        uses: clowdhaus/terraform-composite-actions/pre-commit@v1.8.3
        with:
          terraform-version: ${{ steps.minMax.outputs.maxVersion }}
          tflint-version: ${{ env.TFLINT_VERSION }}
          terraform-docs-version: ${{ env.TERRAFORM_DOCS_VERSION }}
          install-tfsec: true
